File being tested: test/SmallGrid.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 900, 869, 838, 807, 776, 745, 714, 683, 652, 621, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 136224
		== Time: 2ms
		== Dense Graph:
		==Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 46966
		== Time: 6ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 44991
		== Time: 2ms
		== Dense Graph:
		==Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 44991
		== Time: 5ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 44991
		== Time: 2ms
		== Dense Graph:
		==Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 44991
		== Time: 6ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 44991
		== Time: 2ms
		== Dense Graph:
		==Path: 900, 869, 838, 807, 776, 745, 714, 683, 682, 651, 620, 589, 558, 527, 496, 465, 434, 403, 372, 341, 310, 279, 248, 217, 186, 155, 124, 93, 62, 31, 
		== Distance: 44991
		== Time: 6ms
File being tested: test/MedGrid.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 3000, 2930, 2929, 2928, 2927, 2857, 2856, 2786, 2785, 2715, 2714, 2713, 2643, 2642, 2641, 2571, 2501, 2431, 2361, 2360, 2290, 2289, 2288, 2218, 2148, 2147, 2146, 2145, 2144, 2074, 2073, 2003, 1933, 1863, 1793, 1792, 1791, 1790, 1789, 1788, 1787, 1786, 1785, 1715, 1714, 1644, 1643, 1642, 1641, 1571, 1570, 1569, 1568, 1567, 1566, 1496, 1426, 1425, 1355, 1285, 1215, 1145, 1075, 1074, 1073, 1072, 1002, 932, 862, 861, 791, 721, 720, 650, 649, 648, 647, 577, 507, 506, 436, 366, 365, 364, 363, 293, 292, 222, 221, 151, 150, 149, 79, 78, 77, 76, 75, 5, 4, 3, 2, 1, 
		== Distance: 538658
		== Time: 3ms
		== Dense Graph:
		==Path: 3000, 2930, 2860, 2790, 2720, 2650, 2580, 2510, 2509, 2439, 2369, 2368, 2367, 2366, 2365, 2364, 2294, 2293, 2223, 2153, 2152, 2151, 2081, 2080, 2079, 2009, 1939, 1869, 1799, 1729, 1659, 1589, 1588, 1518, 1448, 1378, 1377, 1376, 1306, 1305, 1304, 1303, 1302, 1232, 1231, 1161, 1160, 1159, 1158, 1157, 1087, 1017, 1016, 946, 876, 806, 805, 804, 734, 733, 732, 662, 661, 660, 659, 658, 588, 587, 586, 516, 515, 514, 444, 443, 442, 441, 440, 370, 369, 368, 367, 366, 365, 364, 363, 362, 361, 360, 359, 289, 219, 218, 217, 216, 215, 214, 213, 143, 73, 72, 71, 1, 
		== Distance: 772616
		== Time: 88ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 3000, 2999, 2998, 2997, 2996, 2995, 2925, 2924, 2923, 2853, 2852, 2782, 2712, 2642, 2641, 2640, 2570, 2500, 2499, 2498, 2428, 2427, 2426, 2425, 2424, 2354, 2353, 2352, 2282, 2212, 2211, 2141, 2071, 2070, 2000, 1930, 1860, 1790, 1789, 1719, 1718, 1717, 1716, 1715, 1714, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1568, 1567, 1566, 1496, 1426, 1356, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1210, 1140, 1070, 1069, 1068, 1067, 997, 927, 926, 925, 855, 854, 853, 852, 782, 712, 711, 710, 640, 570, 500, 499, 498, 497, 427, 426, 356, 286, 216, 215, 214, 144, 143, 142, 141, 140, 70, 
		== Distance: 40498
		== Time: 10ms
		== Dense Graph:
		==Path: 3000, 2999, 2998, 2997, 2996, 2995, 2925, 2924, 2923, 2853, 2852, 2782, 2712, 2642, 2641, 2640, 2570, 2500, 2499, 2498, 2428, 2427, 2426, 2425, 2424, 2354, 2353, 2352, 2282, 2212, 2211, 2141, 2071, 2070, 2000, 1930, 1860, 1790, 1789, 1719, 1718, 1717, 1716, 1715, 1714, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1568, 1567, 1566, 1496, 1426, 1356, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1210, 1140, 1070, 1069, 1068, 1067, 997, 927, 926, 925, 855, 854, 853, 852, 782, 712, 711, 710, 640, 570, 500, 499, 498, 497, 427, 426, 356, 286, 216, 215, 214, 144, 143, 142, 141, 140, 70, 
		== Distance: 40498
		== Time: 92ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 3000, 2999, 2998, 2997, 2996, 2995, 2925, 2924, 2923, 2853, 2852, 2782, 2712, 2642, 2641, 2640, 2570, 2500, 2499, 2498, 2428, 2427, 2426, 2425, 2424, 2354, 2353, 2352, 2282, 2212, 2211, 2141, 2071, 2070, 2000, 1930, 1860, 1790, 1789, 1719, 1718, 1717, 1716, 1715, 1714, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1568, 1567, 1566, 1496, 1426, 1356, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1210, 1140, 1070, 1069, 1068, 1067, 997, 927, 926, 925, 855, 854, 853, 852, 782, 712, 711, 710, 640, 570, 500, 499, 498, 497, 427, 426, 356, 286, 216, 215, 214, 144, 143, 142, 141, 140, 70, 
		== Distance: 40498
		== Time: 11ms
		== Dense Graph:
		==Path: 3000, 2999, 2998, 2997, 2996, 2995, 2925, 2924, 2923, 2853, 2852, 2782, 2712, 2642, 2641, 2640, 2570, 2500, 2499, 2498, 2428, 2427, 2426, 2425, 2424, 2354, 2353, 2352, 2282, 2212, 2211, 2141, 2071, 2070, 2000, 1930, 1860, 1790, 1789, 1719, 1718, 1717, 1716, 1715, 1714, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1568, 1567, 1566, 1496, 1426, 1356, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1210, 1140, 1070, 1069, 1068, 1067, 997, 927, 926, 925, 855, 854, 853, 852, 782, 712, 711, 710, 640, 570, 500, 499, 498, 497, 427, 426, 356, 286, 216, 215, 214, 144, 143, 142, 141, 140, 70, 
		== Distance: 40498
		== Time: 93ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 3000, 2999, 2998, 2997, 2996, 2995, 2925, 2924, 2923, 2853, 2852, 2782, 2712, 2642, 2641, 2640, 2570, 2500, 2499, 2498, 2428, 2427, 2426, 2425, 2424, 2354, 2353, 2352, 2282, 2212, 2211, 2141, 2071, 2070, 2000, 1930, 1860, 1790, 1789, 1719, 1718, 1717, 1716, 1715, 1714, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1568, 1567, 1566, 1496, 1426, 1356, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1210, 1140, 1070, 1069, 1068, 1067, 997, 927, 926, 925, 855, 854, 853, 852, 782, 712, 711, 710, 640, 570, 500, 499, 498, 497, 427, 426, 356, 286, 216, 215, 214, 144, 143, 142, 141, 140, 70, 
		== Distance: 40498
		== Time: 10ms
		== Dense Graph:
		==Path: 3000, 2999, 2998, 2997, 2996, 2995, 2925, 2924, 2923, 2853, 2852, 2782, 2712, 2642, 2641, 2640, 2570, 2500, 2499, 2498, 2428, 2427, 2426, 2425, 2424, 2354, 2353, 2352, 2282, 2212, 2211, 2141, 2071, 2070, 2000, 1930, 1860, 1790, 1789, 1719, 1718, 1717, 1716, 1715, 1714, 1644, 1643, 1642, 1641, 1640, 1639, 1638, 1568, 1567, 1566, 1496, 1426, 1356, 1286, 1285, 1284, 1283, 1282, 1281, 1280, 1210, 1140, 1070, 1069, 1068, 1067, 997, 927, 926, 925, 855, 854, 853, 852, 782, 712, 711, 710, 640, 570, 500, 499, 498, 497, 427, 426, 356, 286, 216, 215, 214, 144, 143, 142, 141, 140, 70, 
		== Distance: 40498
		== Time: 93ms
File being tested: test/LargeGrid.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 12000, 11999, 11877, 11755, 11633, 11511, 11510, 11509, 11387, 11265, 11143, 11021, 10899, 10777, 10776, 10654, 10653, 10652, 10651, 10529, 10528, 10527, 10405, 10283, 10282, 10160, 10038, 9916, 9794, 9672, 9550, 9428, 9306, 9184, 9183, 9182, 9181, 9059, 9058, 9057, 8935, 8934, 8933, 8811, 8689, 8688, 8566, 8444, 8443, 8321, 8199, 8198, 8076, 7954, 7832, 7710, 7709, 7708, 7707, 7585, 7584, 7462, 7461, 7339, 7217, 7216, 7094, 6972, 6850, 6728, 6727, 6726, 6604, 6482, 6360, 6238, 6116, 6115, 5993, 5871, 5749, 5627, 5505, 5383, 5382, 5260, 5138, 5016, 4894, 4772, 4650, 4528, 4406, 4405, 4283, 4161, 4039, 4038, 3916, 3915, 3793, 3671, 3549, 3548, 3426, 3304, 3182, 3060, 2938, 2937, 2815, 2693, 2692, 2570, 2448, 2326, 2204, 2082, 1960, 1838, 1837, 1836, 1714, 1713, 1712, 1711, 1589, 1467, 1345, 1223, 1101, 979, 857, 735, 613, 491, 369, 368, 367, 245, 123, 1, 
		== Distance: 828646
		== Time: 23ms
		== Dense Graph:
		==Path: 12000, 11878, 11756, 11755, 11633, 11632, 11510, 11509, 11508, 11386, 11264, 11142, 11020, 10898, 10897, 10896, 10895, 10894, 10772, 10650, 10528, 10406, 10405, 10404, 10403, 10281, 10159, 10037, 10036, 10035, 9913, 9791, 9669, 9668, 9546, 9545, 9544, 9422, 9421, 9299, 9177, 9055, 9054, 8932, 8810, 8688, 8566, 8444, 8443, 8321, 8320, 8198, 8076, 8075, 7953, 7831, 7709, 7708, 7586, 7464, 7463, 7341, 7219, 7218, 7096, 6974, 6852, 6851, 6850, 6728, 6727, 6726, 6725, 6603, 6481, 6359, 6358, 6357, 6235, 6113, 5991, 5869, 5747, 5625, 5503, 5381, 5259, 5258, 5136, 5014, 4892, 4770, 4648, 4526, 4404, 4282, 4281, 4280, 4158, 4036, 3914, 3792, 3791, 3669, 3668, 3667, 3545, 3423, 3301, 3179, 3057, 3056, 2934, 2812, 2690, 2568, 2567, 2445, 2323, 2201, 2079, 2078, 2077, 2076, 2075, 1953, 1831, 1830, 1708, 1586, 1464, 1342, 1220, 1098, 976, 854, 732, 610, 488, 366, 244, 122, 
		== Distance: 702679
		== Time: 466ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 12000, 11878, 11877, 11876, 11754, 11632, 11510, 11509, 11387, 11265, 11264, 11142, 11020, 10898, 10776, 10775, 10653, 10652, 10651, 10529, 10528, 10406, 10284, 10162, 10161, 10160, 10159, 10158, 10157, 10035, 9913, 9791, 9669, 9547, 9546, 9545, 9423, 9301, 9179, 9057, 8935, 8934, 8812, 8690, 8568, 8446, 8324, 8202, 8080, 7958, 7957, 7835, 7713, 7591, 7469, 7347, 7346, 7224, 7102, 6980, 6979, 6857, 6735, 6613, 6491, 6369, 6247, 6125, 6003, 6002, 5880, 5758, 5636, 5635, 5634, 5512, 5390, 5268, 5146, 5145, 5144, 5022, 5021, 5020, 5019, 4897, 4775, 4774, 4773, 4651, 4529, 4528, 4406, 4284, 4162, 4040, 3918, 3796, 3674, 3552, 3551, 3429, 3428, 3306, 3184, 3062, 2940, 2818, 2696, 2695, 2694, 2693, 2692, 2570, 2448, 2326, 2204, 2203, 2081, 2080, 1958, 1836, 1714, 1713, 1591, 1469, 1347, 1346, 1224, 1102, 980, 979, 857, 856, 734, 612, 611, 489, 367, 245, 244, 122, 
		== Distance: 36931
		== Time: 22ms
		== Dense Graph:
		==Path: 12000, 11878, 11877, 11876, 11754, 11632, 11510, 11509, 11387, 11265, 11264, 11142, 11020, 10898, 10776, 10775, 10653, 10652, 10651, 10529, 10528, 10406, 10284, 10162, 10161, 10160, 10159, 10158, 10157, 10035, 9913, 9791, 9669, 9547, 9546, 9545, 9423, 9301, 9179, 9057, 8935, 8934, 8812, 8690, 8568, 8446, 8324, 8202, 8080, 7958, 7957, 7835, 7713, 7591, 7469, 7347, 7346, 7224, 7102, 6980, 6979, 6857, 6735, 6613, 6491, 6369, 6247, 6125, 6003, 6002, 5880, 5758, 5636, 5635, 5634, 5512, 5390, 5268, 5146, 5145, 5144, 5022, 5021, 5020, 5019, 4897, 4775, 4774, 4773, 4651, 4529, 4528, 4406, 4284, 4162, 4040, 3918, 3796, 3674, 3552, 3551, 3429, 3428, 3306, 3184, 3062, 2940, 2818, 2696, 2695, 2694, 2693, 2692, 2570, 2448, 2326, 2204, 2203, 2081, 2080, 1958, 1836, 1714, 1713, 1591, 1469, 1347, 1346, 1224, 1102, 980, 979, 857, 856, 734, 612, 611, 489, 367, 245, 244, 122, 
		== Distance: 36931
		== Time: 548ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 12000, 11878, 11877, 11876, 11754, 11632, 11510, 11509, 11387, 11265, 11264, 11142, 11020, 10898, 10776, 10775, 10653, 10652, 10651, 10529, 10528, 10406, 10284, 10162, 10161, 10160, 10159, 10158, 10157, 10035, 9913, 9791, 9669, 9547, 9546, 9545, 9423, 9301, 9179, 9057, 8935, 8934, 8812, 8690, 8568, 8446, 8324, 8202, 8080, 7958, 7957, 7835, 7713, 7591, 7469, 7347, 7346, 7224, 7102, 6980, 6979, 6857, 6735, 6613, 6491, 6369, 6247, 6125, 6003, 6002, 5880, 5758, 5636, 5635, 5634, 5512, 5390, 5268, 5146, 5145, 5144, 5022, 5021, 5020, 5019, 4897, 4775, 4774, 4773, 4651, 4529, 4528, 4406, 4284, 4162, 4040, 3918, 3796, 3674, 3552, 3551, 3429, 3428, 3306, 3184, 3062, 2940, 2818, 2696, 2695, 2694, 2693, 2692, 2570, 2448, 2326, 2204, 2203, 2081, 2080, 1958, 1836, 1714, 1713, 1591, 1469, 1347, 1346, 1224, 1102, 980, 979, 857, 856, 734, 612, 611, 489, 367, 245, 244, 122, 
		== Distance: 36931
		== Time: 24ms
		== Dense Graph:
		==Path: 12000, 11878, 11877, 11876, 11754, 11632, 11510, 11509, 11387, 11265, 11264, 11142, 11020, 10898, 10776, 10775, 10653, 10652, 10651, 10529, 10528, 10406, 10284, 10162, 10161, 10160, 10159, 10158, 10157, 10035, 9913, 9791, 9669, 9547, 9546, 9545, 9423, 9301, 9179, 9057, 8935, 8934, 8812, 8690, 8568, 8446, 8324, 8202, 8080, 7958, 7957, 7835, 7713, 7591, 7469, 7347, 7346, 7224, 7102, 6980, 6979, 6857, 6735, 6613, 6491, 6369, 6247, 6125, 6003, 6002, 5880, 5758, 5636, 5635, 5634, 5512, 5390, 5268, 5146, 5145, 5144, 5022, 5021, 5020, 5019, 4897, 4775, 4774, 4773, 4651, 4529, 4528, 4406, 4284, 4162, 4040, 3918, 3796, 3674, 3552, 3551, 3429, 3428, 3306, 3184, 3062, 2940, 2818, 2696, 2695, 2694, 2693, 2692, 2570, 2448, 2326, 2204, 2203, 2081, 2080, 1958, 1836, 1714, 1713, 1591, 1469, 1347, 1346, 1224, 1102, 980, 979, 857, 856, 734, 612, 611, 489, 367, 245, 244, 122, 
		== Distance: 36931
		== Time: 552ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 12000, 11878, 11877, 11876, 11754, 11632, 11510, 11509, 11387, 11265, 11264, 11142, 11020, 10898, 10776, 10775, 10653, 10652, 10651, 10529, 10528, 10406, 10284, 10162, 10161, 10160, 10159, 10158, 10157, 10035, 9913, 9791, 9669, 9547, 9546, 9545, 9423, 9301, 9179, 9057, 8935, 8934, 8812, 8690, 8568, 8446, 8324, 8202, 8080, 7958, 7957, 7835, 7713, 7591, 7469, 7347, 7346, 7224, 7102, 6980, 6979, 6857, 6735, 6613, 6491, 6369, 6247, 6125, 6003, 6002, 5880, 5758, 5636, 5635, 5634, 5512, 5390, 5268, 5146, 5145, 5144, 5022, 5021, 5020, 5019, 4897, 4775, 4774, 4773, 4651, 4529, 4528, 4406, 4284, 4162, 4040, 3918, 3796, 3674, 3552, 3551, 3429, 3428, 3306, 3184, 3062, 2940, 2818, 2696, 2695, 2694, 2693, 2692, 2570, 2448, 2326, 2204, 2203, 2081, 2080, 1958, 1836, 1714, 1713, 1591, 1469, 1347, 1346, 1224, 1102, 980, 979, 857, 856, 734, 612, 611, 489, 367, 245, 244, 122, 
		== Distance: 36931
		== Time: 23ms
		== Dense Graph:
		==Path: 12000, 11878, 11877, 11876, 11754, 11632, 11510, 11509, 11387, 11265, 11264, 11142, 11020, 10898, 10776, 10775, 10653, 10652, 10651, 10529, 10528, 10406, 10284, 10162, 10161, 10160, 10159, 10158, 10157, 10035, 9913, 9791, 9669, 9547, 9546, 9545, 9423, 9301, 9179, 9057, 8935, 8934, 8812, 8690, 8568, 8446, 8324, 8202, 8080, 7958, 7957, 7835, 7713, 7591, 7469, 7347, 7346, 7224, 7102, 6980, 6979, 6857, 6735, 6613, 6491, 6369, 6247, 6125, 6003, 6002, 5880, 5758, 5636, 5635, 5634, 5512, 5390, 5268, 5146, 5145, 5144, 5022, 5021, 5020, 5019, 4897, 4775, 4774, 4773, 4651, 4529, 4528, 4406, 4284, 4162, 4040, 3918, 3796, 3674, 3552, 3551, 3429, 3428, 3306, 3184, 3062, 2940, 2818, 2696, 2695, 2694, 2693, 2692, 2570, 2448, 2326, 2204, 2203, 2081, 2080, 1958, 1836, 1714, 1713, 1591, 1469, 1347, 1346, 1224, 1102, 980, 979, 857, 856, 734, 612, 611, 489, 367, 245, 244, 122, 
		== Distance: 36931
		== Time: 549ms
File being tested: test/SmallGeo.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
File being tested: test/MedGeo.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
File being tested: test/LargeGeo.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
File being tested: test/SmallTorus.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 0ms
File being tested: test/MedTorus.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 1ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 1ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 1ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 1ms
File being tested: test/LargeTorus.txt
-------------------
		Random Heuristic:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 4ms
		Dijkstra's Algorithm:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 4ms
		Euclidian Distance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 4ms
		ManhattanDistance:
		== Sparse Graph:
		>> Path: 
		== Distance: -1
		== Time: 0ms
		== Dense Graph:
		==Path: 
		== Distance: -1
		== Time: 4ms
